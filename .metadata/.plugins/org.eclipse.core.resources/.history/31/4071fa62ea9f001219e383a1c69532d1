package com.pcm.factory;

import java.lang.reflect.Constructor;
import java.lang.reflect.InvocationTargetException;

import com.pcm.entity.Employee;
import com.pcm.entity.Person;
import com.pcm.entity.President;
import com.pcm.exceptions.PresidentException;
import com.pcm.service.PayroleService;

public class PersonFactory<A extends Person>{
                
                private static PersonFactory instance;
                @SuppressWarnings({ "unchecked", "rawtypes" })
                public static PersonFactory getInstance() {
                                if (instance == null) {
                                                instance = new PersonFactory<>();
                                }
                                return instance;
                }

                public A createInstance(String name, String last, int age, String salary, Class<Employee> class1)
                                                   throws IllegalAccessException, InstantiationException, IllegalArgumentException, InvocationTargetException, NoSuchMethodException, SecurityException {
                                Constructor<A> constructor = (Constructor<A>) class1.getDeclaredConstructor(String.class,String.class, int.class,String.class);
                                return constructor.newInstance(name,last,age,salary);
                }
  



}
			

