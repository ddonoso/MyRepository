package com.pcm.training;

import static org.junit.Assert.assertEquals;

import java.util.ArrayList;
import java.util.Comparator;
import java.util.List;
import java.util.SortedSet;
import java.util.TreeSet;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.test.context.ContextConfiguration;
import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;

import com.pcm.training.PayroleService;
import com.pcm.training.President;


@RunWith(SpringJUnit4ClassRunner.class)
@ContextConfiguration(locations = {"classpath:/beans.xml"})
public class JPAPayRollTest {

	
	@Autowired
	private PayroleService ps;
	
	@Test
	public void payRollTest() throws PresidentException{
		
		President e = new President("Ezekiel","Calayag",22,"50000");
		e.setYearsOfService(10);
		// 10000 * 1.1 * 1.1 * 12 * 0.25
		assertEquals(ps.getPension(e), "353692.22");	
				
	}
	
	@Test
	public void goldenParachute() throws PresidentException{
		
		President pres = new President("Kellogs", "Calayag", 22, "500");
		pres.setYearsOfService(10);
		ps.getPension(pres);
		assertEquals(pres.getGoldenParachuteBonus(), "10000");
		
		
		Employee emp = new Employee("Kiel", "Calayag", 22, "5500");
		emp.setYearsOfService(10);
		ps.getPension(emp);
		assertEquals(emp.getGoldenParachuteBonus(), null);
	}
	
	@Test
    public void collectionCompareTest() throws PresidentException {
           Person p = new President("Kelvin", "Te", 21, "100000");
           Person p1 = new President("Cathy","Belen", 21, "100000");
           Person p2 = new President("Kevin", "Dorado", 21, "100000");
           Person p3 = new President("Kel", "Calayang", 21, "100000");
           
           SortedSet<Person> s = new TreeSet<Person>(new Comparator<Person>() {

                  @Override
                  public int compare(Person o1, Person o2) {
                        // TODO Auto-generated method stub
                        return o1.getLastName().compareTo(o2.getLastName());
                  }
           });
           s.add(p1);
           s.add(p2);
           s.add(p3);
           s.add(p);
           
           List<Person> list = new ArrayList<Person>(s);
           assertEquals(list.get(0).getLastName(),"Belen");

           assertEquals(list.get(1).getLastName(),"Calayang");

           assertEquals(list.get(2).getLastName(),"Dorado");

           assertEquals(list.get(3).getLastName(),"Te");
	}
	
	
	
	
}



